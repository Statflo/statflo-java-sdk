/*
 * Statflo API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.statflo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * AccountMemberUpdate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-05T14:23:39.893836-04:00[America/Toronto]")

public class AccountMemberUpdate {
  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  /**
   * Gets or Sets accountType
   */
  @JsonAdapter(AccountTypeEnum.Adapter.class)
  public enum AccountTypeEnum {
    @SerializedName("B")
    B("B"),
    @SerializedName("I")
    I("I"),
    @SerializedName("L")
    L("L"),
    @SerializedName("C")
    C("C"),
    @SerializedName("D")
    D("D");

    private String value;

    AccountTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AccountTypeEnum fromValue(String input) {
      for (AccountTypeEnum b : AccountTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AccountTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AccountTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AccountTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AccountTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("accountType")
  private AccountTypeEnum accountType = AccountTypeEnum.I;

  /**
   * Gets or Sets language
   */
  @JsonAdapter(LanguageEnum.Adapter.class)
  public enum LanguageEnum {
    @SerializedName("en")
    EN("en"),
    @SerializedName("fr")
    FR("fr");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LanguageEnum fromValue(String input) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LanguageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LanguageEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public LanguageEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return LanguageEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("language")
  private LanguageEnum language = LanguageEnum.EN;

  @SerializedName("accountMemberName")
  private String accountMemberName = null;

  @SerializedName("service")
  private String service = null;

  @SerializedName("product")
  private String product = null;

  @SerializedName("serviceStartDate")
  private OffsetDateTime serviceStartDate = null;

  @SerializedName("serviceEndDate")
  private OffsetDateTime serviceEndDate = null;

  @SerializedName("tradeIn")
  private String tradeIn = null;

  @SerializedName("imei")
  private String imei = null;

  @SerializedName("tab")
  private Float tab = null;

  public AccountMemberUpdate phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @Schema(required = true, description = "")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public AccountMemberUpdate accountType(AccountTypeEnum accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @Schema(required = true, description = "")
  public AccountTypeEnum getAccountType() {
    return accountType;
  }

  public void setAccountType(AccountTypeEnum accountType) {
    this.accountType = accountType;
  }

  public AccountMemberUpdate language(LanguageEnum language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public LanguageEnum getLanguage() {
    return language;
  }

  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }

  public AccountMemberUpdate accountMemberName(String accountMemberName) {
    this.accountMemberName = accountMemberName;
    return this;
  }

   /**
   * Get accountMemberName
   * @return accountMemberName
  **/
  @Schema(description = "")
  public String getAccountMemberName() {
    return accountMemberName;
  }

  public void setAccountMemberName(String accountMemberName) {
    this.accountMemberName = accountMemberName;
  }

  public AccountMemberUpdate service(String service) {
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @Schema(description = "")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }

  public AccountMemberUpdate product(String product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(description = "")
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }

  public AccountMemberUpdate serviceStartDate(OffsetDateTime serviceStartDate) {
    this.serviceStartDate = serviceStartDate;
    return this;
  }

   /**
   * Get serviceStartDate
   * @return serviceStartDate
  **/
  @Schema(description = "")
  public OffsetDateTime getServiceStartDate() {
    return serviceStartDate;
  }

  public void setServiceStartDate(OffsetDateTime serviceStartDate) {
    this.serviceStartDate = serviceStartDate;
  }

  public AccountMemberUpdate serviceEndDate(OffsetDateTime serviceEndDate) {
    this.serviceEndDate = serviceEndDate;
    return this;
  }

   /**
   * Get serviceEndDate
   * @return serviceEndDate
  **/
  @Schema(description = "")
  public OffsetDateTime getServiceEndDate() {
    return serviceEndDate;
  }

  public void setServiceEndDate(OffsetDateTime serviceEndDate) {
    this.serviceEndDate = serviceEndDate;
  }

  public AccountMemberUpdate tradeIn(String tradeIn) {
    this.tradeIn = tradeIn;
    return this;
  }

   /**
   * Get tradeIn
   * @return tradeIn
  **/
  @Schema(description = "")
  public String getTradeIn() {
    return tradeIn;
  }

  public void setTradeIn(String tradeIn) {
    this.tradeIn = tradeIn;
  }

  public AccountMemberUpdate imei(String imei) {
    this.imei = imei;
    return this;
  }

   /**
   * Get imei
   * @return imei
  **/
  @Schema(description = "")
  public String getImei() {
    return imei;
  }

  public void setImei(String imei) {
    this.imei = imei;
  }

  public AccountMemberUpdate tab(Float tab) {
    this.tab = tab;
    return this;
  }

   /**
   * Get tab
   * @return tab
  **/
  @Schema(description = "")
  public Float getTab() {
    return tab;
  }

  public void setTab(Float tab) {
    this.tab = tab;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountMemberUpdate accountMemberUpdate = (AccountMemberUpdate) o;
    return Objects.equals(this.phoneNumber, accountMemberUpdate.phoneNumber) &&
        Objects.equals(this.accountType, accountMemberUpdate.accountType) &&
        Objects.equals(this.language, accountMemberUpdate.language) &&
        Objects.equals(this.accountMemberName, accountMemberUpdate.accountMemberName) &&
        Objects.equals(this.service, accountMemberUpdate.service) &&
        Objects.equals(this.product, accountMemberUpdate.product) &&
        Objects.equals(this.serviceStartDate, accountMemberUpdate.serviceStartDate) &&
        Objects.equals(this.serviceEndDate, accountMemberUpdate.serviceEndDate) &&
        Objects.equals(this.tradeIn, accountMemberUpdate.tradeIn) &&
        Objects.equals(this.imei, accountMemberUpdate.imei) &&
        Objects.equals(this.tab, accountMemberUpdate.tab);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phoneNumber, accountType, language, accountMemberName, service, product, serviceStartDate, serviceEndDate, tradeIn, imei, tab);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountMemberUpdate {\n");
    
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    accountMemberName: ").append(toIndentedString(accountMemberName)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    serviceStartDate: ").append(toIndentedString(serviceStartDate)).append("\n");
    sb.append("    serviceEndDate: ").append(toIndentedString(serviceEndDate)).append("\n");
    sb.append("    tradeIn: ").append(toIndentedString(tradeIn)).append("\n");
    sb.append("    imei: ").append(toIndentedString(imei)).append("\n");
    sb.append("    tab: ").append(toIndentedString(tab)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
